[33mcommit c09aec9fb75a0836e074ed373a665c98bd2de1c1[m[33m ([m[1;32mstaging[m[33m)[m
Author: dzikrilmn <dzikri.ilmansyah@gmail.com>
Date:   Sun Nov 17 23:11:29 2024 +0700

    green push 1.0

[1mdiff --git a/authentication/migrations/0003_category_subcategory_servicesession.py b/authentication/migrations/0003_category_subcategory_servicesession.py[m
[1mnew file mode 100644[m
[1mindex 0000000..91833f2[m
[1m--- /dev/null[m
[1m+++ b/authentication/migrations/0003_category_subcategory_servicesession.py[m
[36m@@ -0,0 +1,38 @@[m
[32m+[m[32m# Generated by Django 5.1.1 on 2024-11-17 15:06[m
[32m+[m
[32m+[m[32mimport django.db.models.deletion[m
[32m+[m[32mfrom django.db import migrations, models[m
[32m+[m
[32m+[m
[32m+[m[32mclass Migration(migrations.Migration):[m
[32m+[m
[32m+[m[32m    dependencies = [[m
[32m+[m[32m        ('authentication', '0002_userprofile_account_number_userprofile_address_and_more'),[m
[32m+[m[32m    ][m
[32m+[m
[32m+[m[32m    operations = [[m
[32m+[m[32m        migrations.CreateModel([m
[32m+[m[32m            name='Category',[m
[32m+[m[32m            fields=[[m
[32m+[m[32m                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),[m
[32m+[m[32m                ('name', models.CharField(max_length=100)),[m
[32m+[m[32m            ],[m
[32m+[m[32m        ),[m
[32m+[m[32m        migrations.CreateModel([m
[32m+[m[32m            name='Subcategory',[m
[32m+[m[32m            fields=[[m
[32m+[m[32m                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),[m
[32m+[m[32m                ('name', models.CharField(max_length=100)),[m
[32m+[m[32m                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='authentication.category')),[m
[32m+[m[32m            ],[m
[32m+[m[32m        ),[m
[32m+[m[32m        migrations.CreateModel([m
[32m+[m[32m            name='ServiceSession',[m
[32m+[m[32m            fields=[[m
[32m+[m[32m                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),[m
[32m+[m[32m                ('name', models.CharField(max_length=100)),[m
[32m+[m[32m                ('price', models.DecimalField(decimal_places=2, max_digits=10)),[m
[32m+[m[32m                ('subcategory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='authentication.subcategory')),[m
[32m+[m[32m            ],[m
[32m+[m[32m        ),[m
[32m+[m[32m    ][m
[1mdiff --git a/authentication/migrations/0004_remove_subcategory_category_and_more.py b/authentication/migrations/0004_remove_subcategory_category_and_more.py[m
[1mnew file mode 100644[m
[1mindex 0000000..184ea23[m
[1m--- /dev/null[m
[1m+++ b/authentication/migrations/0004_remove_subcategory_category_and_more.py[m
[36m@@ -0,0 +1,30 @@[m
[32m+[m[32m# Generated by Django 5.1.1 on 2024-11-17 16:09[m
[32m+[m
[32m+[m[32mfrom django.db import migrations[m
[32m+[m
[32m+[m
[32m+[m[32mclass Migration(migrations.Migration):[m
[32m+[m
[32m+[m[32m    dependencies = [[m
[32m+[m[32m        ('authentication', '0003_category_subcategory_servicesession'),[m
[32m+[m[32m    ][m
[32m+[m
[32m+[m[32m    operations = [[m
[32m+[m[32m        migrations.RemoveField([m
[32m+[m[32m            model_name='subcategory',[m
[32m+[m[32m            name='category',[m
[32m+[m[32m        ),[m
[32m+[m[32m        migrations.RemoveField([m
[32m+[m[32m            model_name='servicesession',[m
[32m+[m[32m            name='subcategory',[m
[32m+[m[32m        ),[m
[32m+[m[32m        migrations.DeleteModel([m
[32m+[m[32m            name='Category',[m
[32m+[m[32m        ),[m
[32m+[m[32m        migrations.DeleteModel([m
[32m+[m[32m            name='ServiceSession',[m
[32m+[m[32m        ),[m
[32m+[m[32m        migrations.DeleteModel([m
[32m+[m[32m            name='Subcategory',[m
[32m+[m[32m        ),[m
[32m+[m[32m    ][m
[1mdiff --git a/main/forms.py b/main/forms.py[m
[1mnew file mode 100644[m
[1mindex 0000000..9b0832f[m
[1m--- /dev/null[m
[1m+++ b/main/forms.py[m
[36m@@ -0,0 +1,11 @@[m
[32m+[m[32mfrom django import forms[m
[32m+[m[32mfrom .models import ServiceOrder[m
[32m+[m
[32m+[m[32mclass ServiceOrderForm(forms.ModelForm):[m
[32m+[m[32m    class Meta:[m
[32m+[m[32m        model = ServiceOrder[m
[32m+[m[32m        fields = ['order_date', 'discount_code', 'total_payment', 'payment_method'][m
[32m+[m[32m        widgets = {[m
[32m+[m[32m            'order_date': forms.DateInput(attrs={'type': 'date'}),[m
[32m+[m[32m            'total_payment': forms.NumberInput(attrs={'step': '0.01'}),[m
[32m+[m[32m        }[m
[1mdiff --git a/main/migrations/0001_initial.py b/main/migrations/0001_initial.py[m
[1mnew file mode 100644[m
[1mindex 0000000..2f0d83f[m
[1m--- /dev/null[m
[1m+++ b/main/migrations/0001_initial.py[m
[36m@@ -0,0 +1,52 @@[m
[32m+[m[32m# Generated by Django 5.1.1 on 2024-11-17 16:09[m
[32m+[m
[32m+[m[32mimport django.db.models.deletion[m
[32m+[m[32mfrom django.conf import settings[m
[32m+[m[32mfrom django.db import migrations, models[m
[32m+[m
[32m+[m
[32m+[m[32mclass Migration(migrations.Migration):[m
[32m+[m
[32m+[m[32m    initial = True[m
[32m+[m
[32m+[m[32m    dependencies = [[m
[32m+[m[32m        migrations.swappable_dependency(settings.AUTH_USER_MODEL),[m
[32m+[m[32m    ][m
[32m+[m
[32m+[m[32m    operations = [[m
[32m+[m[32m        migrations.CreateModel([m
[32m+[m[32m            name='Category',[m
[32m+[m[32m            fields=[[m
[32m+[m[32m                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),[m
[32m+[m[32m                ('name', models.CharField(max_length=100)),[m
[32m+[m[32m            ],[m
[32m+[m[32m        ),[m
[32m+[m[32m        migrations.CreateModel([m
[32m+[m[32m            name='ServiceOrder',[m
[32m+[m[32m            fields=[[m
[32m+[m[32m                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),[m
[32m+[m[32m                ('order_date', models.DateField()),[m
[32m+[m[32m                ('discount_code', models.CharField(blank=True, max_length=50, null=True)),[m
[32m+[m[32m                ('total_payment', models.DecimalField(decimal_places=2, max_digits=10)),[m
[32m+[m[32m                ('payment_method', models.CharField(max_length=100)),[m
[32m+[m[32m                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),[m
[32m+[m[32m            ],[m
[32m+[m[32m        ),[m
[32m+[m[32m        migrations.CreateModel([m
[32m+[m[32m            name='Subcategory',[m
[32m+[m[32m            fields=[[m
[32m+[m[32m                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),[m
[32m+[m[32m                ('name', models.CharField(max_length=100)),[m
[32m+[m[32m                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='main.category')),[m
[32m+[m[32m            ],[m
[32m+[m[32m        ),[m
[32m+[m[32m        migrations.CreateModel([m
[32m+[m[32m            name='ServiceSession',[m
[32m+[m[32m            fields=[[m
[32m+[m[32m                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),[m
[32m+[m[32m                ('name', models.CharField(max_length=100)),[m
[32m+[m[32m                ('price', models.DecimalField(decimal_places=2, max_digits=10)),[m
[32m+[m[32m                ('subcategory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='main.subcategory')),[m
[32m+[m[32m            ],[m
[32m+[m[32m        ),[m
[32m+[m[32m    ][m
[1mdiff --git a/main/models.py b/main/models.py[m
[1mindex 0f02227..971c119 100644[m
[1m--- a/main/models.py[m
[1m+++ b/main/models.py[m
[36m@@ -1 +1,33 @@[m
[31m-from django.db import models[m
\ No newline at end of file[m
[32m+[m[32mfrom django.db import models[m
[32m+[m[32mfrom django.contrib.auth.models import User[m
[32m+[m
[32m+[m[32mclass ServiceOrder(models.Model):[m
[32m+[m[32m    user = models.ForeignKey(User, on_delete=models.CASCADE)[m
[32m+[m[32m    order_date = models.DateField()[m
[32m+[m[32m    discount_code = models.CharField(max_length=50, blank=True, null=True)[m
[32m+[m[32m    total_payment = models.DecimalField(max_digits=10, decimal_places=2)[m
[32m+[m[32m    payment_method = models.CharField(max_length=100)[m
[32m+[m
[32m+[m[32m    def __str__(self):[m
[32m+[m[32m        return f"Order by {self.user.username} on {self.order_date}"[m
[32m+[m
[32m+[m[32mclass Category(models.Model):[m
[32m+[m[32m    name = models.CharField(max_length=100)[m
[32m+[m
[32m+[m[32m    def __str__(self):[m
[32m+[m[32m        return self.name[m
[32m+[m
[32m+[m[32mclass Subcategory(models.Model):[m
[32m+[m[32m    name = models.CharField(max_length=100)[m
[32m+[m[32m    category = models.ForeignKey(Category, related_name='subcategories', on_delete=models.CASCADE)[m
[32m+[m
[32m+[m[32m    def __str__(self):[m
[32m+[m[32m        return self.name[m
[32m+[m
[32m+[m[32mclass ServiceSession(models.Model):[m
[32m+[m[32m    name = models.CharField(max_length=100)[m
[32m+[m[32m    price = models.DecimalField(max_digits=10, decimal_places=2)[m
[32m+[m[32m    subcategory = models.ForeignKey(Subcategory, related_name='sessions', on_delete=models.CASCADE)[m
[32m+[m
[32m+[m[32m    def __str__(self):[m
[32m+[m[32m        return self.name[m
\ No newline at end of file[m
[1mdiff --git a/main/templates/create_service_order.html b/main/templates/create_service_order.html[m
[1mnew file mode 100644[m
[1mindex 0000000..206ffc0[m
[1m--- /dev/null[m
[1m+++ b/main/templates/create_service_order.html[m
[36m@@ -0,0 +1,25 @@[m
[32m+[m[32m{% extends 'base.html' %}[m
[32m+[m
[32m+[m[32m{% block content %}[m
[32m+[m[32m<div class="modal" id="serviceOrderModal">[m
[32m+[m[32m    <div class="modal-content">[m
[32m+[m[32m        <h2>Pesan Jasa</h2>[m
[32m+[m[32m        <form method="post">[m
[32m+[m[32m            {% csrf_token %}[m
[32m+[m[32m            {{ form.as_p }}[m
[32m+[m[32m            <button type="submit">Pesan Jasa</button>[m
[32m+[m[32m        </form>[m
[32m+[m[32m    </div>[m
[32m+[m[32m</div>[m
[32m+[m
[32m+[m[32m<script>[m
[32m+[m[32m    // JavaScript to handle modal display[m
[32m+[m[32m    function openModal() {[m
[32m+[m[32m        document.getElementById('serviceOrderModal').style.display = 'block';[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    function closeModal() {[m
[32m+[m[32m        document.getElementById('serviceOrderModal').style.display = 'none';[m
[32m+[m[32m    }[m
[32m+[m[32m</script>[m
[32m+[m[32m{% endblock %}[m
[1mdiff --git a/main/templates/homepage.html b/main/templates/homepage.html[m
[1mindex cd93c3c..061fd17 100644[m
[1m--- a/main/templates/homepage.html[m
[1m+++ b/main/templates/homepage.html[m
[36m@@ -1,12 +1,39 @@[m
[31m-{% extends "base.html" %}[m
[31m-[m
[31m-{% block meta %}[m
[31m-<title>Home | Sijarta Weak Entity</title>[m
[31m-{% endblock meta %}[m
[32m+[m[32m{% extends 'base.html' %}[m
 [m
 {% block content %}[m
[31m-<!-- Blank content area with only navbar above -->[m
[31m-<div class="center-container min-h-screen flex items-center justify-center">[m
[31m-    <p class="text-gray-500 text-xl">Welcome to the Homepage!</p>[m
[32m+[m[32m<h1>Homepage Loaded</h1>[m
[32m+[m[32m<p>Categories: {{ categories|length }}</p>[m
[32m+[m[32m<div>[m
[32m+[m[32m    <label for="category">Kategori</label>[m
[32m+[m[32m    <select id="category">[m
[32m+[m[32m        <option value="">Select Category</option>[m
[32m+[m[32m        {% for category in categories %}[m
[32m+[m[32m            <option value="{{ category.id }}">{{ category.name }}</option>[m
[32m+[m[32m        {% endfor %}[m
[32m+[m[32m    </select>[m
[32m+[m
[32m+[m[32m    <label for="subcategory">Nama Subkategori</label>[m
[32m+[m[32m    <select id="subcategory">[m
[32m+[m[32m        <option value="">Select Subcategory</option>[m
[32m+[m[32m        {% for category in categories %}[m
[32m+[m[32m            {% for subcategory in category.subcategories.all %}[m
[32m+[m[32m                <option value="{{ subcategory.id }}">{{ subcategory.name }}</option>[m
[32m+[m[32m            {% endfor %}[m
[32m+[m[32m        {% endfor %}[m
[32m+[m[32m    </select>[m
[32m+[m
[32m+[m[32m    <input type="text" placeholder="Search" />[m
[32m+[m[32m    <button type="button">Search</button>[m
[32m+[m[32m</div>[m
[32m+[m
[32m+[m[32m<div>[m
[32m+[m[32m    {% for category in categories %}[m
[32m+[m[32m        <h2>{{ category.name }}</h2>[m
[32m+[m[32m        <ul>[m
[32m+[m[32m            {% for subcategory in category.subcategories.all %}[m
[32m+[m[32m                <li><a href="{% url 'subcategory_detail' subcategory.id %}">{{ subcategory.name }}</a></li>[m
[32m+[m[32m            {% endfor %}[m
[32m+[m[32m        </ul>[m
[32m+[m[32m    {% endfor %}[m
 </div>[m
[31m-{% endblock content %}[m
[32m+[m[32m{% endblock %}[m[41m [m
\ No newline at end of file[m
[1mdiff --git a/main/urls.py b/main/urls.py[m
[1mindex b111638..a231a3e 100644[m
[1m--- a/main/urls.py[m
[1m+++ b/main/urls.py[m
[36m@@ -1,11 +1,14 @@[m
 from django.urls import path, include[m
 [m
[31m-from main.views import landing_page, show_main[m
[32m+[m[32mfrom main.views import landing_page, show_main, subcategory_for_user, subcategory_for_worker, create_service_order[m
 [m
 app_name = 'main'[m
 [m
 urlpatterns = [[m
     path("", landing_page, name="landing_page"),[m
     path("homepage/", show_main, name="show_main"),[m
[32m+[m[32m    path("subcategory/user/<int:subcategory_id>/", subcategory_for_user, name="subcategory_for_user"),[m
[32m+[m[32m    path("subcategory/worker/<int:subcategory_id>/", subcategory_for_worker, name="subcategory_for_worker"),[m
     path('', include(('discount.urls', 'discount'), namespace='discount')),[m
[32m+[m[32m    path('order/service/', create_service_order, name='create_service_order'),[m
 ][m
\ No newline at end of file[m
[1mdiff --git a/main/views.py b/main/views.py[m
[1mindex b8dcfcf..e6a375c 100644[m
[1m--- a/main/views.py[m
[1m+++ b/main/views.py[m
[36m@@ -1,8 +1,48 @@[m
[31m-from django.shortcuts import render[m
[32m+[m[32mfrom django.shortcuts import render, get_object_or_404, redirect[m
 from django.contrib.auth.decorators import login_required[m
[32m+[m[32mfrom .models import Category, Subcategory, ServiceSession[m
[32m+[m[32mfrom authentication.models import UserProfile[m
[32m+[m[32mfrom .forms import ServiceOrderForm[m
[32m+[m[32mfrom django.contrib import messages[m
 [m
 def landing_page(request):[m
     return render(request,'main.html')[m
 [m
 def show_main(request):[m
[31m-    return render(request,'homepage.html')[m
\ No newline at end of file[m
[32m+[m[32m    return render(request,'homepage.html')[m
[32m+[m
[32m+[m[32mdef homepage(request):[m
[32m+[m[32m    categories = Category.objects.prefetch_related('subcategories').all()[m
[32m+[m[32m    print(categories)[m
[32m+[m[32m    return render(request, 'homepage.html', {'categories': categories})[m
[32m+[m
[32m+[m[32mdef subcategory_for_user(request, subcategory_id):[m
[32m+[m[32m    subcategory = get_object_or_404(Subcategory, id=subcategory_id)[m
[32m+[m[32m    sessions = ServiceSession.objects.filter(subcategory=subcategory)[m
[32m+[m[32m    workers = UserProfile.objects.filter(user_type='pekerja')  # Assuming 'pekerja' is the worker type[m
[32m+[m[32m    return render(request, 'subcategory_user.html', {[m
[32m+[m[32m        'subcategory': subcategory,[m
[32m+[m[32m        'sessions': sessions,[m
[32m+[m[32m        'workers': workers,[m
[32m+[m[32m    })[m
[32m+[m
[32m+[m[32mdef subcategory_for_worker(request, subcategory_id):[m
[32m+[m[32m    subcategory = get_object_or_404(Subcategory, id=subcategory_id)[m
[32m+[m[32m    sessions = ServiceSession.objects.filter(subcategory=subcategory)[m
[32m+[m[32m    return render(request, 'subcategory_worker.html', {[m
[32m+[m[32m        'subcategory': subcategory,[m
[32m+[m[32m        'sessions': sessions,[m
[32m+[m[32m    })[m
[32m+[m
[32m+[m[32mdef create_service_order(request):[m
[32m+[m[32m    if request.method == 'POST':[m
[32m+[m[32m        form = ServiceOrderForm(request.POST)[m
[32m+[m[32m        if form.is_valid():[m
[32m+[m[32m            service_order = form.save(commit=False)[m
[32m+[m[32m            service_order.user = request.user  # Assign the logged-in user[m
[32m+[m[32m            service_order.save()[m
[32m+[m[32m            messages.success(request, "Service order created successfully!")[m
[32m+[m[32m            return redirect('some_view')  # Redirect to a relevant view[m
[32m+[m[32m    else:[m
[32m+[m[32m        form = ServiceOrderForm()[m
[32m+[m[32m    return render(request, 'create_service_order.html', {'form': form})[m
\ No newline at end of file[m
[1mdiff --git a/templates/homepage1.html b/templates/homepage1.html[m
[1mnew file mode 100644[m
[1mindex 0000000..061fd17[m
[1m--- /dev/null[m
[1m+++ b/templates/homepage1.html[m
[36m@@ -0,0 +1,39 @@[m
[32m+[m[32m{% extends 'base.html' %}[m
[32m+[m
[32m+[m[32m{% block content %}[m
[32m+[m[32m<h1>Homepage Loaded</h1>[m
[32m+[m[32m<p>Categories: {{ categories|length }}</p>[m
[32m+[m[32m<div>[m
[32m+[m[32m    <label for="category">Kategori</label>[m
[32m+[m[32m    <select id="category">[m
[32m+[m[32m        <option value="">Select Category</option>[m
[32m+[m[32m        {% for category in categories %}[m
[32m+[m[32m            <option value="{{ category.id }}">{{ category.name }}</option>[m
[32m+[m[32m        {% endfor %}[m
[32m+[m[32m    </select>[m
[32m+[m
[32m+[m[32m    <label for="subcategory">Nama Subkategori</label>[m
[32m+[m[32m    <select id="subcategory">[m
[32m+[m[32m        <option value="">Select Subcategory</option>[m
[32m+[m[32m        {% for category in categories %}[m
[32m+[m[32m            {% for subcategory in category.subcategories.all %}[m
[32m+[m[32m                <option value="{{ subcategory.id }}">{{ subcategory.name }}</option>[m
[32m+[m[32m            {% endfor %}[m
[32m+[m[32m        {% endfor %}[m
[32m+[m[32m    </select>[m
[32m+[m
[32m+[m[32m    <input type="text" placeholder="Search" />[m
[32m+[m[32m    <button type="button">Search</button>[m
[32m+[m[32m</div>[m
[32m+[m
[32m+[m[32m<div>[m
[32m+[m[32m    {% for category in categories %}[m
[32m+[m[32m        <h2>{{ category.name }}</h2>[m
[32m+[m[32m        <ul>[m
[32m+[m[32m            {% for subcategory in category.subcategories.all %}[m
[32m+[m[32m                <li><a href="{% url 'subcategory_detail' subcategory.id %}">{{ subcategory.name }}</a></li>[m
[32m+[m[32m            {% endfor %}[m
[32m+[m[32m        </ul>[m
[32m+[m[32m    {% endfor %}[m
[32m+[m[32m</div>[m
[32m+[m[32m{% endblock %}[m[41m [m
\ No newline at end of file[m
[1mdiff --git a/templates/subcategory_user.html b/templates/subcategory_user.html[m
[1mnew file mode 100644[m
[1mindex 0000000..e8da8a5[m
[1m--- /dev/null[m
[1m+++ b/templates/subcategory_user.html[m
[36m@@ -0,0 +1,29 @@[m
[32m+[m[32m{% extends 'base.html' %}[m
[32m+[m
[32m+[m[32m{% block content %}[m
[32m+[m[32m<h1>{{ subcategory.name }}</h1>[m
[32m+[m[32m<p>{{ subcategory.description }}</p>[m
[32m+[m
[32m+[m[32m<h2>Available Service Sessions</h2>[m
[32m+[m[32m<table>[m
[32m+[m[32m    <tr>[m
[32m+[m[32m        <th>Session Name</th>[m
[32m+[m[32m        <th>Price</th>[m
[32m+[m[32m        <th>Action</th>[m
[32m+[m[32m    </tr>[m
[32m+[m[32m    {% for session in sessions %}[m
[32m+[m[32m    <tr>[m
[32m+[m[32m        <td>{{ session.name }}</td>[m
[32m+[m[32m        <td>{{ session.price }}</td>[m
[32m+[m[32m        <td><button>Button Pesan</button></td>[m
[32m+[m[32m    </tr>[m
[32m+[m[32m    {% endfor %}[m
[32m+[m[32m</table>[m
[32m+[m
[32m+[m[32m<h2>Available Workers</h2>[m
[32m+[m[32m<div>[m
[32m+[m[32m    {% for worker in workers %}[m
[32m+[m[32m        <div>{{ worker.full_name }}</div>[m
[32m+[m[32m    {% endfor %}[m
[32m+[m[32m</div>[m
[32m+[m[32m{% endblock %}[m[41m [m
\ No newline at end of file[m
[1mdiff --git a/templates/subcategory_worker.html b/templates/subcategory_worker.html[m
[1mnew file mode 100644[m
[1mindex 0000000..d68af25[m
[1m--- /dev/null[m
[1m+++ b/templates/subcategory_worker.html[m
[36m@@ -0,0 +1,22 @@[m
[32m+[m[32m{% extends 'base.html' %}[m
[32m+[m
[32m+[m[32m{% block content %}[m
[32m+[m[32m<h1>{{ subcategory.name }}</h1>[m
[32m+[m[32m<p>{{ subcategory.description }}</p>[m
[32m+[m
[32m+[m[32m<h2>Available Service Sessions</h2>[m
[32m+[m[32m<table>[m
[32m+[m[32m    <tr>[m
[32m+[m[32m        <th>Session Name</th>[m
[32m+[m[32m        <th>Price</th>[m
[32m+[m[32m    </tr>[m
[32m+[m[32m    {% for session in sessions %}[m
[32m+[m[32m    <tr>[m
[32m+[m[32m        <td>{{ session.name }}</td>[m
[32m+[m[32m        <td>{{ session.price }}</td>[m
[32m+[m[32m    </tr>[m
[32m+[m[32m    {% endfor %}[m
[32m+[m[32m</table>[m
[32m+[m
[32m+[m[32m<button>Button Bergabung</button>[m
[32m+[m[32m{% endblock %}[m[41m [m
\ No newline at end of file[m
